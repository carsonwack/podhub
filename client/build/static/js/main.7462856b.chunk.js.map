{"version":3,"sources":["components/Navbar/navbar.js","components/Container/container.js","components/Row/row.js","utils/API.js","components/PostCard/postCard.js","pages/Home.js","pages/Profile.js","components/List/list.js","components/Podcast/podcast.js","components/SearchResults/SearchResults.js","components/Episode/episode.js","pages/EpisodeList.js","components/AudioPlayer/audioPlayer.js","components/Portal/portal.js","pages/Listen.js","pages/Login.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","_ref","userSearch","podcastSearch","handleInputChange","handlePodcastSubmit","handleUserSubmit","logout","react_default","a","createElement","className","react_router_dom","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","window","location","pathname","placeholder","value","onChange","name","autoComplete","required","onClick","google_login","buttonText","onLogoutSuccess","Container","props","children","Row","API","getPosts","userId","axios","get","getPostsOnlyByUser","getUsers","user","getPodcasts","podcast","URL","headers","X-RapidAPI-Key","then","response","catch","error","console","log","getEpisodes","podcastId","getUserDetails","id_token","params","getFollowers","getFollowing","getFavorites","handleFavoriteDelete","post","addEpisodeToFavorites","episodeId","addPodcastToFavorites","Card","photo","date","message","icon","title","description","link","likes","comments","src","alt","href","Home","state","posts","userProfileImage","userName","podcastIcon","podcastEpisode","episodeDescription","googleUserId","_this","res","setState","data","this","container","row","length","map","PostCard_postCard","key","Component","followers","following","favorites","podcastTitle","podcastDescription","messageNoPodcast","messageNoFav","deleteFavorite","_this2","List","Podcast","podcastName","podcastLogo","thumbnail","handler","SearchResults","show","podcasts","list","components_Podcast_podcast","title_original","image","Episode","episodeName","audioLink","replace","EpisodeList","episodes","componentDidMount","convertDate","date_ms","Date","concat","getMonth","getDay","getFullYear","toString","convertTime","time_sec","hours","Math","floor","minutes","seconds","addZeroHours","addZeroMins","addZeroSecs","addToFavorites","event","preventDefault","alert","episode","components_Episode_episode","pub_date_ms","audio_length","audio","AudioPlayer","controls","Portal","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","containerEl","document","externalWindow","open","body","appendChild","close","ReactDOM","createPortal","React","PureComponent","Listen","showModal","showPortal","handleShowModal","handleCloseModal","handleShareEpisode","togglePortal","AudioPlayer_audioPlayer","Portal_portal","index_es","onClose","center","Login","redirect","sessionStorage","getItem","react_router","responseGoogle","tokenObj","google_login_default","clientId","onSuccess","onFailure","App","users","showResults","_event$target","target","defineProperty","timer","clearTimeout","setTimeout","checkContent","results","Navbar_navbar","SearchResults_SearchResults","exact","path","component","Profile","Boolean","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7462856b.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./navbar.css\";\nimport { GoogleLogout } from 'react-google-login';\n\n\nfunction Navbar({ userSearch, podcastSearch, handleInputChange, handlePodcastSubmit, handleUserSubmit, logout }) {\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-success\">\n      <Link className=\"navbarText navbar-brand\" to=\"/\">PodHub</Link>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <ul className=\"navbar-nav mr-auto\">\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/profile\"\n              className={\n                window.location.pathname === \"/profile\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Profile\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link\n              to=\"/home\"\n              className={\n                window.location.pathname === \"/home\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Home\n            </Link>\n          </li>\n        </ul>\n\n        <form className=\"form-inline my-2 my-lg-0 searchUserForm\">\n          <input className=\"form-control mr-sm-2 searchUserInput\"\n            type=\"search\"\n            placeholder=\"Search for an user\"\n            aria-label=\"Search\"\n            id=\"usertInput\"\n            value={userSearch}\n            onChange={handleInputChange}\n            name=\"userSearch\"\n            autoComplete=\"off\"\n            required\n          />\n        </form>\n        <button type=\"submit\"\n          className=\"btn btn-dark btn-sm\"\n          onClick={handleUserSubmit}>\n          Search\n        </button>\n        <ul className=\"navbar-nav mr-auto\">\n        <form className=\"form-inline my-2 my-lg-0 searchPodcastForm\">\n          <input className=\"form-control mr-sm-2 searchPodcastInput\"\n            type=\"search\"\n            placeholder=\"Search for a podcast\"\n            aria-label=\"Search\"\n            id=\"podcastInput\"\n            value={podcastSearch}\n            onChange={handleInputChange}\n            name=\"podcastSearch\"\n            autoComplete=\"off\"\n            required\n          />\n        </form>\n        \n        <button type=\"submit\"\n          className=\"btn btn-dark btn-sm\"\n          onClick={handlePodcastSubmit}>\n          Search\n        </button>\n        </ul>\n        \n\n        <GoogleLogout\n          buttonText=\"Logout\"\n          onLogoutSuccess={logout}\n        >\n        </GoogleLogout>\n        \n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import axios from \"axios\";\n\nexport default {\n\n    // Gets all posts for specific user\n    getPosts: function (userId) {\n        return axios.get(\"/api/getPosts\", userId);\n    },\n\n    getPostsOnlyByUser: function (userId) {\n        return axios.get(\"/api/getPostsOnlyByUser\", userId);\n    },\n\n    getUsers: function (user) {\n        return axios.get(\"api/getUsers\", user)\n    },\n\n    // Gets all episodes for a particular podcast\n    getPodcasts: function (podcast) {\n        var URL = \"https://listennotes.p.rapidapi.com/api/v1/search?sort_by_date=0&type=podcast&only_in=title&language=English&safe_mode=1&q=\" + podcast;\n\n        return axios.get(URL, { 'headers': { 'X-RapidAPI-Key': \"a063bce4f1msh0a4f44209d57a2fp1225adjsn3f80cc1cf1bb\" } })\n            .then((response) => {\n                // console.log(\"Podcasts\", response);\n                return response;\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    },\n\n    // Gets all episodes for a particular podcast\n    getEpisodes: function (podcastId) {\n        let URL = \"https://listennotes.p.rapidapi.com/api/v1/podcasts/\" + podcastId + \"?sort=recent_first\";\n\n        return axios.get(URL, { 'headers': { 'X-RapidAPI-Key': \"a063bce4f1msh0a4f44209d57a2fp1225adjsn3f80cc1cf1bb\" } })\n            .then((response => {\n                // console.log(response);\n                return response;\n            }))\n            .catch((error) => {\n                console.log(error);\n            });\n\n    },\n\n    getUserDetails: function (id_token) {\n        return axios.get(\"/api/users\", { params: {id_token}});\n    },\n\n    getFollowers: function (userId) {\n        return axios.get(\"/api/getFollowers\", userId);\n    },\n\n    getFollowing: function (userId) {\n        return axios.get(\"/api/getFollowing\", userId);\n    },\n\n    getFavorites: function (id) {\n        return axios.get(\"/api/favorites\", id);\n    },\n\n    handleFavoriteDelete: function (id) {\n        return axios.post(\"/api/favorites\", id);\n    },\n\n    addEpisodeToFavorites: function(episodeId) {\n        // add episode to user's favorite episodes\n        return episodeId;\n    },\n\n    addPodcastToFavorites: function(podcastId) {\n        // add podcast to user's favorite podcasts\n        return podcastId;\n    }\n\n};\n","import React from \"react\";\nimport \"./postCard.css\";\n\n// POST COMPONENT\n\nfunction Card({ photo, name, date, message, icon, title, description, link, likes, comments }) {\n  return (\n    <div className=\"container rounded-0 border-top-0 border-left-0 border-right-0 card\">\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <img src={photo} alt=\"Poster\"/>\n        </div>\n        <div className=\"col\">\n          <div className=\"row\">{name} &nbsp;|&nbsp; {date}</div>\n          <div className=\"row\">{message}</div>\n          <div className=\"row border rounded\">\n            <div className=\"col-2 p-0\">\n              <img src={icon} alt=\"Podcast Icon\"/>\n            </div>\n            <div className=\"col p-0\">\n            <p>{title}</p>\n            <p>{description}</p>\n            <a href={link}>{link}</a>\n            </div>\n          </div>\n          <div className=\"row pb-1\">\n            <a href=\"/\" className=\"likes\">Likes:&nbsp;{likes}&nbsp;</a>\n            <a href=\"/\" className=\"comments\"> Comments:&nbsp;{comments}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default Card;\n\n\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id:1,\n                userProfileImage: \"<image>\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id:2,\n                userProfileImage: \"<image>\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user:[\n            {\n                name: \"John Smith\",\n                userProfileImage: \"<image>\",\n                googleUserId: \"1111\",\n            },\n        ],\n\n    };\n\n    componentDidMount() {\n        this.getPosts();\n    };\n\n    // Add function to call getPost function every time when something is posted or every 2 mins or so\n    \n\n    // API request to get the user's and his follower's posts\n    getPosts = () => {\n        API.getPosts(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    message: \"No podcast found, please post something or follow someone to see the feeds.\"\n                })\n            );\n    };\n\n    render() {\n        return (\n            <Container>\n                <Row>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <h4 className=\"text-center\">{this.state.message}</h4>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\nimport Row from \"../components/Row/row\";\n//import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport PostCard from \"../components/PostCard/postCard\";\nimport \"./Profile.css\";\n\n// USER PROFILE PAGE\n\nclass Home extends Component {\n\n    state = {\n        posts: [\n            {\n                id: 1,\n                userProfileImage: \"<image>\",\n                userName: \"Vahe Minasyan\",\n                date: \"03/20/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n            {\n                id: 2,\n                userProfileImage: \"<image>\",\n                userName: \"John Smith\",\n                date: \"03/21/2019\",\n                message: \"Checkout this awesome podcast\",\n                podcastIcon: \"<image>\",\n                podcastEpisode: \"Very Bad Wizards Episode 159: You have the right...\",\n                episodeDescription: \"Description\",\n                link: \"link\",\n                likes: 10,\n                comments: 10,\n            },\n        ],\n        user: [\n            {\n                name: \"John Smith\",\n                userProfileImage: \"<image>\",\n                googleUserId: \"1111\"\n            }\n        ],\n        followers: 5,\n        following: 10,\n        favorites: [\n            {\n                id: 1,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 1\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 2,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 2\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            },\n            {\n                id: 3,\n                podcastIcon: \"<image>\",\n                podcastTitle: \"Favorite podcast 3\",\n                podcastDescription: \"Description\",\n                link: \"link\",\n            }\n        ]\n    };\n\n    componentDidMount() {\n        this.getPostsOnlyByUser();\n        this.getFavorites();\n        this.getUserDetails();\n        this.getFollowers();\n        this.getFollowing();\n    };\n\n    getPostsOnlyByUser = () => {\n        API.getPostsOnlyByUser(this.state.userId)\n            .then(res =>\n                this.setState({\n                    posts: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    posts: [],\n                    messageNoPodcast: \"No posts found, post something.\"\n                })\n            );\n    };\n\n    getFavorites = () => {\n        API.getFavorites(this.state.userId)\n            .then(res =>\n                this.setState({\n                    favorites: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    favorites: [],\n                    messageNoFav: \"No favorites found. Search for a podcast and add it to your favorites.\"\n                })\n            );\n    };\n\n    getUserDetails = () => {\n        API.getUserDetails(this.state.userId)\n            .then(res =>\n                this.setState({\n                    user: res.data\n                })\n            );\n    };\n\n    getFollowers = () => {\n        API.getFollowers(this.state.userId)\n            .then(res =>\n                this.setState({\n                    followers: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    followers: 0,\n                })\n            );\n    };\n\n    getFollowing = () => {\n        API.getFollowing(this.state.userId)\n            .then(res =>\n                this.setState({\n                    following: res.data\n                })\n            )\n            .catch(() =>\n                this.setState({\n                    following: 0,\n                })\n            );\n    };\n\n    handleFavoriteDelete = id => {\n        API.deleteFavorite(id).then(res => this.getFavorites());\n    };\n\n\n    render() {\n        return (\n            <Container >\n                <div className=\"row userProfile rounded bg-light\">\n                    <div className=\"col-4\">\n                        <img src={this.state.user[0].userProfileImage} alt=\"User\" />\n                    </div>\n\n                    <div className=\"col-8\">\n                        <Row>\n                            <h2>{this.state.user[0].name}</h2>\n                        </Row>\n                        <Row>\n                            Posts:&nbsp; {this.state.posts.length} &nbsp; | &nbsp;\n                            Followers:&nbsp;{this.state.followers}&nbsp; | &nbsp;\n                            Following:&nbsp;{this.state.following}\n                        </Row>\n                    </div>\n                </div>\n\n                <div className=\"row favorites rounded\">\n                    <h4>Favorites: </h4>\n                    {this.state.favorites.length ? (\n                        <Container>\n                            {this.state.favorites.map(favorites => (\n\n                                <div className=\"row border rounded\" key={favorites.id}>\n\n                                    <div className=\"col-2 p-0\">\n\n                                        <img src={favorites.podcastIcon} alt=\"Podcast Icon\" />\n                                    </div>\n                                    <div className=\"col p-0\">\n                                        <p>{favorites.podcastTitle}</p>\n                                        <p>{favorites.podcastDescription}</p>\n                                        <a href={favorites.link}>{favorites.link}</a> &nbsp;\n\n                                            <button className=\"btn btn-sm mb-1 btn-light\"\n                                            onClick={() => this.handleFavoriteDelete(favorites.id)}\n                                        >\n                                            x\n                                            </button>\n\n                                    </div>\n                                </div>\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoFav}</h5>\n                            </div>\n                        )}\n                </div>\n                <Row>\n                    <h4>Recent posts:</h4>\n                    {this.state.posts.length ? (\n                        <Container>\n                            {this.state.posts.map(post => (\n                                <PostCard\n                                    key={post.id}\n                                    photo={post.userProfileImage}\n                                    name={post.userName}\n                                    date={post.date}\n                                    message={post.message}\n                                    icon={post.podcastIcon}\n                                    title={post.podcastEpisode}\n                                    description={post.episodeDescription}\n                                    link={post.link}\n                                    likes={post.likes}\n                                    comments={post.comments}\n                                />\n                            ))}\n                        </Container>\n                    ) : (\n                            <div className=\"col\">\n                                <h5 className=\"text-center\">&nbsp;{this.state.messageNoPodcast}</h5>\n                            </div>\n                        )}\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Home;","import React from \"react\";\r\n\r\n// LIST AND LIST ITEM COMPONENTS\r\n\r\nexport const List = ({ children }) => (\r\n    <ul className=\"list-group\">\r\n      {children}\r\n    </ul>\r\n  );\r\n  \r\nexport function ListItem({ children }) {\r\n    return <li className=\"list-group-item\">{children}</li>;\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./podcast.css\";\r\n\r\n// PODCAST COMPONENT\r\n// This component represents an individual Podcast.\r\n// It contains a link that will redirect the user to the Episode List page.\r\n// Upon redirecting it will send along information on the Podcast ID, Name, and Logo for use down the line. \r\n// It also contains an onClick event handler which is passed down from App.js. This handler hides the Search Results dropdown.\r\n\r\nfunction Podcast ({ podcastId, podcastName, podcastLogo, thumbnail, handler }) {\r\n\r\n    return (\r\n        \r\n        <Link to={{\r\n            pathname: \"/episodeList\", \r\n            state: {\r\n                podcastId: podcastId,\r\n                podcastName: podcastName,\r\n                podcastLogo: podcastLogo\r\n            }\r\n            }} \r\n            className=\"podcast\"\r\n            onClick={handler}>\r\n            \r\n            <span><img className=\"podcastLogoSmall\" src={thumbnail} alt=\"Podcast Logo\"/></span>\r\n            <span><p className=\"podcastTitle\">{podcastName}</p></span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default Podcast;\r\n","import React from \"react\";\r\nimport List from \"../List/list\";\r\nimport Podcast from \"../Podcast/podcast\";\r\nimport Container from \"../Container/container\";\r\nimport \"./searchResults.css\";\r\n\r\n// SEARCH RESULTS COMPONENT\r\n// This component displays the search results for podcasts depending on a user query.\r\n// This query comes from the Podcast Search box in the Nav Bar.\r\n// It renders each podcast using the Podcast component.\r\n// It will appear on the right side of the screen as a floating drop-down menu. \r\n// It will only be visible if the user has typed/changed text in the Podcast Search box. \r\n\r\nfunction SearchResults ({ show, podcasts, handler }) {\r\n\r\n    return (\r\n        <Container>\r\n            <div className={show}>\r\n                {podcasts.length > 0 ? (\r\n                    <List>\r\n                        {podcasts.map((podcast) =>\r\n                            <Podcast \r\n                            key={podcast.id}\r\n                            podcastId={podcast.id}\r\n                            podcastName={podcast.title_original}\r\n                            podcastLogo={podcast.image}\r\n                            thumbnail={podcast.thumbnail}\r\n                            handler={handler}\r\n                            />\r\n                        )}       \r\n                    </List>\r\n                ) : (\r\n                    <p>No podcasts found.</p>\r\n                )}\r\n            </div>\r\n        </Container>\r\n        )\r\n};\r\n\r\nexport default SearchResults;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./episode.css\";\r\n\r\n// EPISODE COMPONENT\r\n// This component displays the details of an individual episode.\r\n// It contains a link that will redirect the user to the Listen to Podcast page.\r\n\r\nfunction Episode({ podcastName, podcastLogo, episodeId, episodeName, date, length, description, audioLink }) {\r\n  return (\r\n\r\n    <div className=\"container rounded-0 border-0 card\">\r\n      <div className=\"col\">\r\n\r\n        {/* Name | Date */}\r\n        <div className=\"row\">\r\n          {episodeName} &nbsp;|&nbsp; {date} &nbsp;|&nbsp; {length}\r\n        </div>\r\n\r\n        <div className=\"border rounded\">\r\n\r\n          {/* Episode Description */}\r\n          <span>{description.replace(/<\\/?[^>]+(>|$)/g, \"\")}<br /></span>\r\n\r\n          {/* Listen Button */}\r\n          <Link\r\n            to={{\r\n              pathname: \"/listen\",\r\n              state: {\r\n                podcastName: podcastName,\r\n                podcastLogo: podcastLogo,\r\n                episodeId: episodeId,\r\n                episodeName: episodeName,\r\n                date: date,\r\n                description: description,\r\n                audioLink: audioLink\r\n              }\r\n            }}\r\n          >\r\n            Listen\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Episode;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container/container\";\r\nimport Row from \"../components/Row/row\";\r\nimport List from \"../components/List/list\";\r\nimport Episode from \"../components/Episode/episode\";\r\nimport API from \"../utils/API\";\r\n\r\n// EPISODE LIST PAGE\r\n// This page displays a list of episodes for a particular podcast.\r\n\r\nclass EpisodeList extends Component {\r\n\r\n    state = {\r\n        podcastId: \"\",\r\n        podcastName: \"\",\r\n        podcastLogo: \"\",\r\n        episodes: []\r\n    };\r\n\r\n    // On page load, update State with Podcast ID and Logo url\r\n    // Then call .getEpisodes\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            podcastId: this.props.location.state.podcastId,\r\n            podcastName: this.props.location.state.podcastName,\r\n            podcastLogo: this.props.location.state.podcastLogo\r\n        }, () => { this.getEpisodes() });\r\n    }\r\n\r\n    // Get episodes for podcast by Podcast ID\r\n    getEpisodes = () => {\r\n        API.getEpisodes(this.state.podcastId)\r\n            .then(res =>\r\n                // console.log(res)\r\n                this.setState({\r\n                    episodes: res.data.episodes\r\n                })\r\n            )\r\n            .catch(() =>\r\n                this.setState({\r\n                    episodes: [],\r\n                    message: \"No episodes found.\"\r\n                })\r\n            );\r\n    };\r\n\r\n    // Converts date from ms to MM/DD/YYYY format\r\n    convertDate = (date_ms) => {\r\n        let date = new Date(date_ms);\r\n        return `${date.getMonth() + 1}/${date.getDay() + 1}/${date.getFullYear().toString()}`;\r\n    }\r\n\r\n    // Converts time from seconds to HH:MM:SS format\r\n    convertTime = (time_sec) => {\r\n        let hours = Math.floor(time_sec / 3600);\r\n\r\n        time_sec = time_sec - (hours * 3600);\r\n\r\n        let minutes = Math.floor(time_sec / 60);\r\n        let seconds = time_sec - (minutes * 60);\r\n\r\n        let addZeroHours = \"\";\r\n        let addZeroMins = \"\";\r\n        let addZeroSecs = \"\";\r\n\r\n        if (hours < 10) {\r\n            addZeroHours = 0;\r\n        }\r\n\r\n        if (minutes < 10) {\r\n            addZeroMins = 0;\r\n        }\r\n\r\n        if (seconds < 10) {\r\n            addZeroSecs = 0;\r\n        }\r\n\r\n        return `${addZeroHours}${hours}:${addZeroMins}${minutes}:${addZeroSecs}${seconds}`;\r\n    }\r\n\r\n    // Adds Podcast to list of User's Favorite Podcasts \r\n    addToFavorites = event => {\r\n        event.preventDefault();\r\n\r\n        API.addPodcastToFavorites(this.state.podcastId);\r\n        alert(\"Favorited!\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h1>Episodes</h1>\r\n                <img\r\n                    src={this.state.podcastLogo}\r\n                    alt=\"Podcast Logo\"\r\n                />\r\n                \r\n                <br />\r\n                <Row>\r\n\r\n                    <button className=\"btn btn-danger\" onClick={this.addToFavorites}>Favorite</button>\r\n\r\n                    {this.state.episodes.length ? (\r\n                        <Container>\r\n                            <List>\r\n                                {this.state.episodes.map(episode => (    \r\n                                    <Episode\r\n                                        key={episode.id}\r\n                                        podcastName={this.state.podcastName}\r\n                                        podcastLogo={this.state.podcastLogo}\r\n                                        episodeId={episode.id}\r\n                                        episodeName={episode.title}\r\n                                        date={this.convertDate(episode.pub_date_ms)}\r\n                                        length={this.convertTime(episode.audio_length)}\r\n                                        description={episode.description}\r\n                                        audioLink={episode.audio}\r\n                                    />\r\n                                ))}\r\n                            </List>\r\n                        </Container>\r\n                    ) : (\r\n                            <h2 className=\"text-center\">{this.state.message}</h2>\r\n                        )}\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EpisodeList;\r\n","import React from \"react\";\r\nimport \"./audioPlayer.css\";\r\n\r\n// AUDIO PLAYER COMPONENT\r\n\r\nfunction AudioPlayer({ audioLink }) {\r\n    return (\r\n        <div>\r\n            <audio src={audioLink} type=\"audio/mpeg\" controls/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AudioPlayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./portal.css\";\r\n\r\n// PORTAL COMPONENT\r\n// This component is a ReactDOM pop-up window.\r\n// It is called from the Listen to Podcast page when user clicks \"Open Portal\".\r\n// It is a miniature window that contains only Podcast title, Episode title, and audio player.\r\n\r\nclass Portal extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.containerEl = document.createElement('div');\r\n        this.externalWindow = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.externalWindow = window.open('', '', 'width=400,height=200,left=200,top=200,scrollbars=no');\r\n        this.externalWindow.document.title=\"Podhub Audio\";\r\n        this.externalWindow.document.body.appendChild(this.containerEl); \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.externalWindow.close();\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.props.children, this.containerEl);\r\n    }\r\n}\r\n\r\nexport default Portal;","import React, { Component } from \"react\";\r\nimport Container from \"../components/Container/container\";\r\nimport Row from \"../components/Row/row\";\r\nimport Modal from \"react-responsive-modal\";\r\nimport AudioPlayer from \"../components/AudioPlayer/audioPlayer\";\r\nimport Portal from \"../components/Portal/portal\";\r\nimport API from \"../utils/API\";\r\n\r\n// LISTEN TO PODCAST PAGE\r\n// This page allows a user to listen to a podcast.\r\n// It renders a ListenView component which contains all relevant info on the podcast as well as the audio player.\r\n\r\nclass Listen extends Component {\r\n\r\n    state = {\r\n        podcastName: \"\",\r\n        podcastLogo: \"\",\r\n        episodeId: \"\",\r\n        episodeName: \"\",\r\n        date: \"\",\r\n        description: \"\",\r\n        audioLink: \"\",\r\n        showModal: false,\r\n        showPortal: false\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            podcastName: this.props.location.state.podcastName,\r\n            podcastLogo: this.props.location.state.podcastLogo,\r\n            episodeId: this.props.location.state.episodeId,\r\n            episodeName: this.props.location.state.episodeName,\r\n            date: this.props.location.state.date,\r\n            description: this.props.location.state.description,\r\n            audioLink: this.props.location.state.audioLink\r\n        });\r\n    }\r\n\r\n    // Opens the Share Episode modal\r\n    // Executed upon user clicking \"Share\" button on page\r\n    handleShowModal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    // Closes Share Episode modal\r\n    // Executed upon user clicking \"Share\" button in modal\r\n    handleCloseModal = () => {\r\n        this.setState({\r\n            showModal: false\r\n        });\r\n    }\r\n\r\n    // Shares episode as new post on user's profile\r\n    // Executes when user clicks \"Share\" in modal\r\n    // Closes modal\r\n    handleShareEpisode = event => {\r\n        event.preventDefault();\r\n        this.handleCloseModal();\r\n        alert(\"shared\");\r\n        // Call Share Episode sequence\r\n    }\r\n\r\n    // Adds this episode to User's list of Favorite Episodes\r\n    addToFavorites = event => {\r\n        event.preventDefault();\r\n        API.addEpisodeToFavorites(this.state.episodeId);\r\n        alert(\"Favorited!\");\r\n    }\r\n\r\n    // Activates pop-out window with podcast audio\r\n    togglePortal = event => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            showPortal: !this.state.showPortal\r\n        }, () => console.log(this.state));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Row>\r\n                    <div>\r\n                        <h2>{this.state.podcastName}</h2>\r\n                        <img src={this.state.podcastLogo} alt=\"Podcast Logo\" />\r\n                    </div>\r\n                </Row>\r\n\r\n                <Row>\r\n\r\n                    <div>\r\n                        <h4>{this.state.episodeName} &nbsp;|&nbsp; {this.state.date}</h4>\r\n\r\n                        <AudioPlayer\r\n                            audioLink={this.state.audioLink}\r\n                        />\r\n                    </div>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <div>\r\n                        <p>{this.state.description.replace(/<\\/?[^>]+(>|$)/g, \"\")}</p>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-primary\" onClick={this.handleShowModal}>Share</button>\r\n                    <button className=\"btn btn-danger\" onClick={this.addToFavorites}>Favorite</button>\r\n                    <button className=\"btn btn-dark\" onClick={this.togglePortal}>Open Portal</button>\r\n                </Row>\r\n\r\n                {this.state.showPortal && (\r\n                    <Portal>\r\n                        <h4>{this.state.podcastName}</h4>\r\n                        <p>{this.state.episodeName}</p>\r\n                        <AudioPlayer\r\n                            audioLink={this.state.audioLink}\r\n                        /><br />\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={this.togglePortal}\r\n                        >\r\n                            Close\r\n                        </button>\r\n                    </Portal>\r\n                )}\r\n\r\n                <Modal open={this.state.showModal} onClose={this.togglePortal} center>\r\n\r\n                    <Container>\r\n                        <div>\r\n                            <h4>{this.state.podcastName}</h4>\r\n                            <img src={this.state.podcastLogo} alt=\"Podcast Logo\" />\r\n                            <p>{this.state.episodeName}</p>\r\n                        </div>\r\n\r\n                        <form>\r\n                            <input className=\"userPostInput\" placeholder=\"Enter message\"></input>\r\n                        </form>\r\n\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            onClick={this.handleShareEpisode}\r\n                        >\r\n                            Share\r\n                        </button>\r\n                    </Container>\r\n                    \r\n                </Modal>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Listen;\r\n","import React, { Component } from \"react\";\nimport Container from \"../components/Container/container\";\n// import Row from \"../components/Row/row\";\n// import Col from \"../components/Col/col\";\nimport API from \"../utils/API\";\nimport \"./Login.css\";\n// import ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\nimport {Redirect} from 'react-router-dom';\n\n\n\nclass Login extends Component {\n\n    state = {\n        id_token: \"\",\n        redirect: false,\n    };\n\n    \n\n    getUserDetails = () => {\n        API.getUserDetails(this.state.id_token)\n            .then(res =>\n                console.log(res),\n                //sessionStorage.setItem(\"userData\", res)\n            )\n    };\n\n\n    render() {\n\n        if (this.state.redirect || sessionStorage.getItem('userData')) {\n            return (<Redirect to={'/home'}/>)\n        }\n\n        const responseGoogle = (response) => {\n            console.log(response);\n            this.setState ({\n                id_token: response.tokenObj.id_token,\n                redirect: true,\n            });\n            \n            this.getUserDetails();\n        }\n        \n        return (\n\n            <Container>\n                <div className=\"header\">\n                    <div className=\"googleSignIn\">\n                        <GoogleLogin\n                            clientId=\"940323765774-bpnsf77f8vksurn7gbv082gatubu97kl.apps.googleusercontent.com\"\n                            buttonText=\"Login\"\n                            onSuccess={responseGoogle}\n                            onFailure={responseGoogle} />\n                    </div>\n                    <br></br><br></br>\n                    <h1 id=\"loginPageTitle\" className=\"text-center\">Welcome to PodHub!</h1>\n                    <h4 id=\"slogan\" className=\"text-center\">Share what you care about!</h4>\n                </div>\n            </Container>\n\n        )\n    }\n}\n\nexport default Login; \n","import React, { Component } from 'react';\n//import logo from './logo.svg';\n//import logo from './images/logo.svg';\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/navbar\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport SearchResults from \"./components/SearchResults/SearchResults\";\nimport EpisodeList from \"./pages/EpisodeList\";\nimport Listen from \"./pages/Listen\";\nimport Container from \"./components/Container/container\";\nimport API from \"./utils/API\"\nimport Login from './pages/Login';\n\nclass App extends Component {\n\n  state = {\n    userSearch: \"\",\n    podcastSearch: \"\",\n    users: [],\n    podcasts: [],\n    showResults: \"hide\"\n  };\n\n  // When input is changed, update state\n  // this.checkContent is callback function so it executes in real time\n  // Otherwise it will lag behind by one action as setState is asynchronous\n  // Uses debouncing to delay execution of .checkContent() function\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    \n    this.setState({\n      [name]: value,\n    }, () => { \n      let timer;\n      clearTimeout(timer);\n      timer = setTimeout(() => this.checkContent(), 500);\n    });\n  };\n\n  // Check Podcast Search field for text\n  // If text is found, show Search Results \n  // If empty, hide Search Results\n  checkContent = () => {\n    if (this.state.podcastSearch !== \"\") {\n\n      this.setState({\n        showResults: \"show\"\n      })\n\n      this.getPodcasts();\n\n    }\n    else {\n      this.setState({\n        showResults: \"hide\"\n      })\n    }\n  }\n\n  getPodcasts = () => {\n    API.getPodcasts(this.state.podcastSearch)\n      .then(res => {\n        this.setState({\n          podcasts: res.data.results\n        })\n      })    \n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          podcasts: [],\n          message: \"We couldn't find a match.\"\n        })\n      });\n  };\n\n  getUsers = () => {\n    API.getUsers(this.state.userSearch)\n      .then(res => {\n        this.setState({\n          users: res.data\n        })\n      })\n      .catch((error) => {\n        this.setState({\n          users: [],\n          message: \"We couldn't find a match.\"\n        })\n      });\n  };\n\n  handleUserSubmit = event => {\n    event.preventDefault();\n    this.getUsers();\n  };\n\n  handlePodcastSubmit = event => {\n    event.preventDefault();\n    this.getPodcasts();\n  };\n\n  // This will be passed down through children as a prop\n  // When a Podcast is clicked from Search Results, it hides search results window\n  // by updating the parent's state\n  handler = () => {\n    this.setState({\n      showResults: \"hide\"\n    })\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <Navbar\n            handleUserSubmit={this.handleUserSubmit}\n            handlePodcastSubmit={this.handlePodcastSubmit}\n            userSearch={this.state.userSearch}\n            podcastSearch={this.podcastSearch}\n            handleInputChange={this.handleInputChange}\n          />\n          <SearchResults\n            podcasts={this.state.podcasts}\n            show={this.state.showResults}\n            handler={this.handler}\n          />\n          <Container>\n            <Switch>\n              <Route exact path=\"/\" component={Login} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/episodeList\" component={EpisodeList} />\n              <Route exact path=\"/listen\" component={Listen} />\n            </Switch>\n          </Container>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}